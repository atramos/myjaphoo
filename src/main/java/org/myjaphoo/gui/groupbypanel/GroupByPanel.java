/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GroupByPanel.java
 *
 * Created on 19.05.2011, 14:42:25
 */
package org.myjaphoo.gui.groupbypanel;

import org.fife.ui.rsyntaxtextarea.ErrorStrip;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rtextarea.RTextScrollPane;
import org.myjaphoo.MyjaphooController;
import org.myjaphoo.gui.editor.rsta.RSTAHelper;
import org.myjaphoo.gui.errors.ErrorUpdateEvent;
import org.myjaphoo.gui.movietree.StructureDefiningPanel;
import org.myjaphoo.model.StructureType;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.List;

/**
 * @author mla
 */
public class GroupByPanel extends javax.swing.JPanel {

    private MyjaphooController controller;
    private RSyntaxTextArea textArea = new RSyntaxTextArea();
    private RTextScrollPane sp = new RTextScrollPane(textArea);

    /**
     * Creates new form GroupByPanel
     */
    public GroupByPanel(MyjaphooController controller) {
        this.controller = controller;
        initComponents();
        initEditorKit();

        textArea.setFocusCycleRoot(false);

        RSTAHelper.initAsGroupByEditor(textArea);

        ErrorStrip es = new ErrorStrip(textArea);
        JPanel temp = new JPanel(new BorderLayout());
        temp.add(sp);
        temp.add(es, BorderLayout.LINE_END);

        jPanel1.add(temp);

        textArea.setEditable(true);

        initPopups();
    }

    private void initEditorKit() {

        // map enter to "update grouping" and the default  enter action to "shift enter".
        KeyStroke enterKey = KeyStroke.getKeyStroke("ENTER");
        final Action defaultEnterAction = textArea.getActionMap().get(textArea.getInputMap().get(enterKey));

        textArea.getActionMap().put(textArea.getInputMap().get(enterKey), new AbstractAction() { //NOI18N

            @Override
            public void actionPerformed(ActionEvent e) {
                if ((e.getModifiers() & ActionEvent.SHIFT_MASK) != 0) {
                    defaultEnterAction.actionPerformed(e);
                } else {
                    controller.getFilter().setGroupByPattern(textArea.getText());
                    controller.getView().updateMovieAndThumbViews();
                }
            }
        });

        textArea.addPropertyChangeListener(new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                if (RSyntaxTextArea.PARSER_NOTICES_PROPERTY.equals(evt.getPropertyName())) {
                    List notices = textArea.getParserNotices();
                    controller.getEventBus().post(new ErrorUpdateEvent("Grouping", notices));
                }
            }
        });
    }

    public void setGroupByExpression(String expr) {
        textArea.setText(expr);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButtonPopupPredefinedGroupings = new org.mlsoft.swing.JPopupMenuButton();
        jButtonPopupPredefinedCombinations = new org.mlsoft.swing.JPopupMenuButton();
        jPanel1 = new javax.swing.JPanel();

        setMinimumSize(new java.awt.Dimension(333, 55));
        setName("Form"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.myjaphoo.MyjaphooApp.class).getContext().getResourceMap(GroupByPanel.class);
        jButtonPopupPredefinedGroupings.setIcon(resourceMap.getIcon("jButtonPopupPredefinedGroupings.icon")); // NOI18N
        jButtonPopupPredefinedGroupings.setText(resourceMap.getString("jButtonPopupPredefinedGroupings.text")); // NOI18N
        jButtonPopupPredefinedGroupings.setToolTipText(resourceMap.getString("jButtonPopupPredefinedGroupings.toolTipText")); // NOI18N
        jButtonPopupPredefinedGroupings.setFocusable(false);
        jButtonPopupPredefinedGroupings.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonPopupPredefinedGroupings.setName("jButtonPopupPredefinedGroupings"); // NOI18N
        jButtonPopupPredefinedGroupings.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButtonPopupPredefinedGroupings);

        jButtonPopupPredefinedCombinations.setIcon(resourceMap.getIcon("jButtonPopupPredefinedCombinations.icon")); // NOI18N
        jButtonPopupPredefinedCombinations.setText(resourceMap.getString("jButtonPopupPredefinedCombinations.text")); // NOI18N
        jButtonPopupPredefinedCombinations.setToolTipText(resourceMap.getString("jButtonPopupPredefinedCombinations.toolTipText")); // NOI18N
        jButtonPopupPredefinedCombinations.setFocusable(false);
        jButtonPopupPredefinedCombinations.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonPopupPredefinedCombinations.setName("jButtonPopupPredefinedCombinations"); // NOI18N
        jButtonPopupPredefinedCombinations.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButtonPopupPredefinedCombinations);

        add(jToolBar1, java.awt.BorderLayout.NORTH);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.BorderLayout());
        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPopupPredefinedCombinations;
    private javax.swing.JButton jButtonPopupPredefinedGroupings;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    private void initPopups() {
        org.mlsoft.swing.JPopupMenuButton popupPredefGroupings = (org.mlsoft.swing.JPopupMenuButton) jButtonPopupPredefinedGroupings;
        JPopupMenu popuphelpmenu = new JPopupMenu();

        for (StructureType st : StructureType.values()) {
            popuphelpmenu.add(createActionForStructureType(st));
        }
        popupPredefGroupings.setPopupmenu(popuphelpmenu);

        org.mlsoft.swing.JPopupMenuButton popupPredefCombis = (org.mlsoft.swing.JPopupMenuButton) jButtonPopupPredefinedCombinations;
        JPopupMenu popupCombis = new JPopupMenu();
        popupCombis.add(new StructureDefiningPanel(controller.getMainMoviePanelController(), popupCombis));
        popupPredefCombis.setPopupmenu(popupCombis);
    }

    private AbstractAction createActionForStructureType(final StructureType st) {
        return new AbstractAction(st.toString()) {
            @Override
            public void actionPerformed(ActionEvent e) {
                textArea.setText(st.buildUserDefinedEquivalentExpr());
                controller.getMainMoviePanelController().setStructType(st);
                controller.getMainMoviePanelController().fireStructureChanged();
            }
        };
    }
}
