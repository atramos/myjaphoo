/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TokenSelectionDialog.java
 *
 * Created on 14.05.2010, 15:15:11
 */
package org.myjaphoo.gui.tokenselection;

import org.jdesktop.swingx.treetable.AbstractTreeTableModel;
import org.myjaphoo.MyjaphooController;
import org.myjaphoo.gui.action.AddNewTokenActionInTokenTree;
import org.myjaphoo.gui.token.TokenPanel;
import org.myjaphoo.gui.util.WrappedNode;
import org.myjaphoo.model.db.Token;

import java.awt.*;
import java.awt.event.KeyEvent;
import java.util.ResourceBundle;

/**
 *
 * @author mla
 */
public class TokenSelectionDialog extends javax.swing.JDialog {

    private final static ResourceBundle localeBundle = ResourceBundle.getBundle("org/myjaphoo/gui/tokenselection/resources/TokenSelectionDialog");
    private TokenSelectionController controller;
    private boolean ok = false;

    /** Creates new form TokenSelectionDialog */
    public TokenSelectionDialog(MyjaphooController mainController, java.awt.Frame parent) {
        super(parent, true);
        controller = new TokenSelectionController(mainController, this);

        initComponents();
        setTitle(localeBundle.getString("SELECT TOKEN FOR ASSIGNMENT"));
        jButton1.setText(localeBundle.getString("NEW_TAG"));
        jButton1.setAction(new AddNewTokenActionInTokenTree(mainController));
        getTokenPanel().refreshView();
        getTokenPanel().setShowPreviewBigMode();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new org.myjaphoo.gui.token.TokenPanel(controller);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        jButton1.setText("jButtonNew"); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setName("jButton1"); // NOI18N
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton1);

        jPanel2.add(jToolBar1, java.awt.BorderLayout.NORTH);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.myjaphoo.MyjaphooApp.class).getContext().getResourceMap(TokenSelectionDialog.class);
        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        jPanel2.add(jTextField1, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel1.setName("jPanel1"); // NOI18N
        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        setPreferredSize(new Dimension(800, 500));
        jPanel1.setPreferredSize(new Dimension(800, 500));
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            setVisible(false);
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ok = true;
            setVisible(false);
        } else {
            String typedText = jTextField1.getText();

            controller.setTypedText(typedText);
            getTokenPanel().refreshView();
        }
    }//GEN-LAST:event_jTextField1KeyReleased
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    public TokenPanel getTokenPanel() {
        return (TokenPanel) jPanel1;
    }

    public Token getSelectedToken() {
        AbstractTreeTableModel model = controller.createTokenTreeModel();
        // get nextbest token:
        WrappedNode node = (WrappedNode) model.getRoot();
        // next best child of the node:
        if (node.getChildCount() > 0) {
            Token firstOne = ((WrappedNode<Token>) node.getChildAt(0)).getRef();
            if (node.getChildCount() == 1) {
                return firstOne;
            } else {
                // wenn im controller eines per maus gesetzt wurde, dann nimm das:
                if (controller.getToken() != null) {
                    return controller.getToken();
                } else {
                    return firstOne;
                }
            }
        } else {
            return null;
        }
    }

    /**
     * @return the ok
     */
    public boolean isOk() {
        return ok;
    }

    void okAndClose() {
        ok = true;
        setVisible(false);
    }
}
