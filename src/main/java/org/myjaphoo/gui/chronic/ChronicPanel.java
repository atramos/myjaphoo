/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TokenTreePanel.java
 *
 * Created on 27.10.2009, 13:06:35
 */
package org.myjaphoo.gui.chronic;

import org.mlsoft.swing.annotation.ToolbarAction;
import org.mlsoft.swing.jtable.JXTableSupport;
import org.myjaphoo.MyjaphooController;
import org.myjaphoo.gui.panel.AbstractEmbeddablePanel;
import org.myjaphoo.model.db.ChronicEntry;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.swing.*;
import java.util.ResourceBundle;

/**
 *
 * @author mla
 */
public class ChronicPanel extends AbstractEmbeddablePanel {

    private final static ResourceBundle localeBundle = ResourceBundle.getBundle("org/myjaphoo/gui/chronic/resources/ChronicPanel");

    public static final Logger LOGGER = LoggerFactory.getLogger(ChronicPanel.class.getName());
    private MyjaphooController controller;

    /** Creates new form TokenTreePanel */
    public ChronicPanel(MyjaphooController controller) {
        this.controller = controller;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {


        //jButton1 = new javax.swing.JButton();
        jXTable1 = new org.myjaphoo.gui.chronic.ChronicTable(controller);
        JXTableSupport<ChronicEntry> tableSupport = new JXTableSupport<ChronicEntry>(jXTable1, ((ChronicTable) jXTable1).getChronicModel());
        tableSupport.setConfiguration(this, localeBundle);
        setLayout(new java.awt.BorderLayout());
        JPanel panel = tableSupport.createTableWithToolbar();
        add(panel, java.awt.BorderLayout.CENTER);
        setMinimumSize(new java.awt.Dimension(99, 25));
        setName("Form"); // NOI18N

    }// </editor-fold>//GEN-END:initComponents


    public void onDoubleClickAction(ChronicEntry node) {
        controller.getFilter().popChronic(node);
        controller.getView().updateChronic(node);
        controller.getView().updateMovieAndThumbViews();
    }


    @ToolbarAction(name = "jButton1.text", contextRelevant = false)
    public void refreshButtonAction() {
        ((ChronicTable) jXTable1).refreshModel();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables

    private org.jdesktop.swingx.JXTable jXTable1;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getTitle() {
        return localeBundle.getString("CHRONIK");
    }

    @Override
    public void refreshView() {
    }

    @Override
    public void clearView() {
    }
}
